<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Otiva.API</name>
    </assembly>
    <members>
        <member name="M:Otiva.API.Controllers.AccountController.GetCurrenUserId(System.Threading.CancellationToken)">
            <summary>
            Получить id текущего пользователя
            </summary>
            <param name="cancellation"></param>
            <returns></returns>
        </member>
        <member name="M:Otiva.API.Controllers.AccountController.GetCurrenUser(System.Threading.CancellationToken)">
            <summary>
            Получить текущего IdentityUser
            </summary>
            <param name="cancellation"></param>
            <returns></returns>
        </member>
        <member name="M:Otiva.API.Controllers.AccountController.ConfirmEmail(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Подтвердить почту
            </summary>
            <param name="userId"></param>
            <param name="code">Код подтверждения</param>
            <returns></returns>
        </member>
        <member name="M:Otiva.API.Controllers.AccountController.SendTokenOnChangeEmaiAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Изменить почту
            </summary>
            <param name="newEmail">Новая почта</param>
            <param name="cancellation"></param>
            <returns></returns>
        </member>
        <member name="M:Otiva.API.Controllers.AccountController.ConfirmChangeEmail(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Подтверждение смены почты
            </summary>
            <param name="userId"></param>
            <param name="newEmail"></param>
            <param name="token"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:Otiva.API.Controllers.AccountController.ChangePasswordAsync(Otiva.Contracts.UserDto.ChangePassword,System.Threading.CancellationToken)">
            <summary>
            Изменить пароль
            </summary>
            <param name="changePass"></param>
            <param name="cancellation"></param>
            <returns></returns>
        </member>
        <member name="M:Otiva.API.Controllers.AccountController.Login(Otiva.Contracts.UserDto.LoginRequest,System.Threading.CancellationToken)">
            <summary>
            Аутентификация пользователя
            </summary>
            <param name="userLogin"></param>
            <returns></returns>
        </member>
        <member name="T:Otiva.API.Controllers.AdController">
            <summary>
            Контроллер для работы с объявлениями
            </summary>
        </member>
        <member name="M:Otiva.API.Controllers.AdController.GetMyAdsAsync(System.Int32,System.Int32,System.Threading.CancellationToken)">
            <summary>
            Получить все объявления, которые опубликовал текущий пользователь
            </summary>
            <param name="take"></param>
            <param name="skip"></param>
            <param name="cancellation"></param>
            <returns></returns>
            <exception cref="T:System.Exception"></exception>
        </member>
        <member name="M:Otiva.API.Controllers.AdController.GetByIdAsync(System.Guid,System.Threading.CancellationToken)">
            <summary>
            Получить объявление по Id
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:Otiva.API.Controllers.AdController.GetByFilter(Otiva.Contracts.AdDto.SearchFilterAd,Otiva.Contracts.AdDto.SortAdsRequest,System.Threading.CancellationToken)">
            <summary>
            Получить объявления по фильтрам
            </summary>
            <param name="query"></param>
            <returns></returns>
            <exception cref="T:System.Exception"></exception>
        </member>
        <member name="M:Otiva.API.Controllers.AdController.CreateAdAsync(Otiva.Contracts.AdDto.CreateAdRequest,System.Threading.CancellationToken)">
            <summary>
            Создать объвления
            </summary>
            <param name="createAd"></param>
            <param name="cancellation"></param>
            <returns></returns>
        </member>
        <member name="M:Otiva.API.Controllers.AdController.EditAdAsync(System.Guid,Otiva.Contracts.AdDto.UpdateAdRequest,System.Threading.CancellationToken)">
            <summary>
            Редактировать объявление
            </summary>
            <param name="id"></param>
            <param name="edit"></param>
            <returns></returns>
        </member>
        <member name="M:Otiva.API.Controllers.AdController.DeleteAdAsync(System.Guid,System.Threading.CancellationToken)">
            <summary>
            Удалить объявление
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:Otiva.API.Controllers.CategoryController.GetAllCategory(System.Threading.CancellationToken)">
            <summary>
            Получить все категории
            </summary>
            <returns></returns>
        </member>
        <member name="M:Otiva.API.Controllers.CategoryController.GetByIdCategory(System.Guid,System.Threading.CancellationToken)">
            <summary>
            Получить категорию по Id
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:Otiva.API.Controllers.CategoryController.CreateCategoryAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Добавить категорию
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:Otiva.API.Controllers.CategoryController.EditCategoryAsync(System.Guid,System.String,System.Threading.CancellationToken)">
            <summary>
            Редактировать категорию
            </summary>
            <param name="id"></param>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:Otiva.API.Controllers.CategoryController.DeleteCategoryAsync(System.Guid,System.Threading.CancellationToken)">
            <summary>
            Удалить категорию
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:Otiva.API.Controllers.MessageController.GetMessageFromChatAsync(System.Guid,System.Threading.CancellationToken)">
            <summary>
            Получить все сообщения с выбранным пользователем
            </summary>
            <param name="user2_Id"></param>
            <param name="cancellation"></param>
            <returns></returns>
            <exception cref="T:System.Exception"></exception>
        </member>
        <member name="M:Otiva.API.Controllers.MessageController.PostMessageAsync(Otiva.Contracts.MessageDto.PostMessageRequest,System.Threading.CancellationToken)">
            <summary>
            Отправить сообщение
            </summary>
            <param name="message"></param>
            <param name="cancellation"></param>
            <returns></returns>
        </member>
        <member name="M:Otiva.API.Controllers.MessageController.EditMessageAsync(System.Guid,Otiva.Contracts.MessageDto.ContentMessage,System.Threading.CancellationToken)">
            <summary>
            Редактировать сообщение
            </summary>
            <param name="id"></param>
            <param name="text"></param>
            <returns></returns>
        </member>
        <member name="M:Otiva.API.Controllers.MessageController.DeleteAsync(System.Guid,System.Threading.CancellationToken)">
            <summary>
            Удалить сообщение
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:Otiva.API.Controllers.PhotoController.CreatePhotoAsync(Microsoft.AspNetCore.Http.IFormFile,System.Threading.CancellationToken)">
            <summary>
            Добавить фото объвления в бд
            </summary>
            <param name="file"></param>
            <returns></returns>
        </member>
        <member name="M:Otiva.API.Controllers.PhotoController.DeletePhotoAsync(System.Guid,System.Threading.CancellationToken)">
            <summary>
            Удалить фото объявления из бд
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:Otiva.API.Controllers.PhotoController.CreatePhotoUserAsync(Microsoft.AspNetCore.Http.IFormFile,System.Threading.CancellationToken)">
            <summary>
            Добавить фото пользователя в бд
            </summary>
            <param name="file"></param>
            <returns></returns>
        </member>
        <member name="M:Otiva.API.Controllers.PhotoController.DeletePhotoUserAsync(System.Guid,System.Threading.CancellationToken)">
            <summary>
            Удалить фото пользователя из бд
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:Otiva.API.Controllers.ReviewController.GetAllAsync(System.Guid,System.Threading.CancellationToken)">
            <summary>
            Получить все отзывы на выбранного продавца
            </summary>
            <param name="SellerId"></param>
            <returns></returns>
        </member>
        <member name="M:Otiva.API.Controllers.ReviewController.GetByIdAsync(System.Guid,System.Threading.CancellationToken)">
            <summary>
            Получить отзыв по Id
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:Otiva.API.Controllers.ReviewController.CreateReviewAsync(Otiva.Contracts.ReviewDto.CreateReviewRequest,System.Threading.CancellationToken)">
            <summary>
            Отправить отзыв
            </summary>
            <param name="createReview"></param>
            <param name="cancellation"></param>
            <returns></returns>
        </member>
        <member name="M:Otiva.API.Controllers.ReviewController.EditReviewAsync(System.Guid,System.String,System.Threading.CancellationToken)">
            <summary>
            Редактировать отзыв
            </summary>
            <param name="id"></param>
            <param name="content"></param>
            <returns></returns>
        </member>
        <member name="M:Otiva.API.Controllers.ReviewController.DeleteAsync(System.Guid,System.Threading.CancellationToken)">
            <summary>
            Удалить отзыв
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:Otiva.API.Controllers.SelectedAdController.GetAll(System.Int32,System.Int32,System.Threading.CancellationToken)">
            <summary>
            Получить избранные текущего пользоваеля
            </summary>
            <param name="take"></param>
            <param name="skip"></param>
            <returns></returns>
        </member>
        <member name="M:Otiva.API.Controllers.SelectedAdController.CreateAdAsync(System.Guid,System.Threading.CancellationToken)">
            <summary>
            Добавить объявление в избранные
            </summary>
            <param name="AdId"></param>
            <param name="cancellation"></param>
            <returns></returns>
        </member>
        <member name="M:Otiva.API.Controllers.SelectedAdController.DeleteAdAsync(System.Guid,System.Threading.CancellationToken)">
            <summary>
            Удалить объвление из избранных
            </summary>
            <param name="Id"></param>
            <returns></returns>
        </member>
        <member name="M:Otiva.API.Controllers.StatisticsController.GetStatisticsByAdIdId(System.Guid,System.Threading.CancellationToken)">
            <summary>
            Получить статистику объявления
            </summary>
            <param name="cancellation"></param>
            <returns></returns>
        </member>
        <member name="M:Otiva.API.Controllers.UserController.GetAll(System.Int32,System.Int32,System.Threading.CancellationToken)">
            <summary>
            Получить всех пользователе  
            </summary>
            <param name="take"></param>
            <param name="skip"></param>
            <returns></returns>
        </member>
        <member name="M:Otiva.API.Controllers.UserController.GetById(System.Guid,System.Threading.CancellationToken)">
            <summary>
            Получить пользователя по Id
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:Otiva.API.Controllers.UserController.GetCurrentDomainUser(System.Threading.CancellationToken)">
            <summary>
            Получить текущего пользователя
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:Otiva.API.Controllers.UserController.Registration(Otiva.Contracts.UserDto.RegistrationRequest,System.Threading.CancellationToken)">
            <summary>
            Регистрация пользователя
            </summary>
            <param name="registration"></param>
            <returns></returns>
        </member>
        <member name="M:Otiva.API.Controllers.UserController.EditUserAsync(System.Guid,Otiva.Contracts.UserDto.UpdateUserRequest,System.Threading.CancellationToken)">
            <summary>
            Редактировать данные пользователя
            </summary>
            <param name="id"></param>
            <param name="edit"></param>
            <param name="file"></param>
            <returns></returns>
        </member>
        <member name="M:Otiva.API.Controllers.UserController.DeleteAdAsync(System.Guid,System.Threading.CancellationToken)">
            <summary>
            Удалить пользователя
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
    </members>
</doc>
